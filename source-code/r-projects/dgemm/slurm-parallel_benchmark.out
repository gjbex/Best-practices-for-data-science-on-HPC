SLURM_JOB_ID: 62139946
SLURM_JOB_USER: vsc30140
SLURM_JOB_ACCOUNT: lpt2_sysadmin
SLURM_JOB_NAME: parallel_benchmark.slurm
SLURM_CLUSTER_NAME: wice
SLURM_JOB_PARTITION: batch_sapphirerapids
SLURM_NNODES: 1
SLURM_NODELIST: q16c17n1
SLURM_JOB_CPUS_PER_NODE: 96
Date: Wed Aug  7 12:15:35 CEST 2024
Walltime: 00-01:00:00
========================================================================
+ hyperfine --runs 3 --parameter-list nr_cores 1,2,4,8,12,16,24,32,40,48,56,64,72,80,88,96 './dgemm.R --nr_matrices 144 --size 2000 --power 5 --nr_cores {nr_cores}'
Benchmark 1: ./dgemm.R --nr_matrices 144 --size 2000 --power 5 --nr_cores 1
  Time (mean ± σ):     33.508 s ±  1.205 s    [User: 1122.812 s, System: 334.000 s]
  Range (min … max):   32.453 s … 34.821 s    3 runs
 
Benchmark 2: ./dgemm.R --nr_matrices 144 --size 2000 --power 5 --nr_cores 2
  Time (mean ± σ):     26.792 s ±  0.707 s    [User: 1171.959 s, System: 767.303 s]
  Range (min … max):   26.007 s … 27.377 s    3 runs
 
Benchmark 3: ./dgemm.R --nr_matrices 144 --size 2000 --power 5 --nr_cores 4
  Time (mean ± σ):     32.139 s ±  0.312 s    [User: 1071.146 s, System: 1814.792 s]
  Range (min … max):   31.852 s … 32.471 s    3 runs
 
Benchmark 4: ./dgemm.R --nr_matrices 144 --size 2000 --power 5 --nr_cores 8
  Time (mean ± σ):     33.916 s ±  1.070 s    [User: 1008.485 s, System: 2147.113 s]
  Range (min … max):   33.298 s … 35.151 s    3 runs
 
  Warning: Statistical outliers were detected. Consider re-running this benchmark on a quiet system without any interferences from other programs. It might help to use the '--warmup' or '--prepare' options.
 
Benchmark 5: ./dgemm.R --nr_matrices 144 --size 2000 --power 5 --nr_cores 12
  Time (mean ± σ):     31.604 s ±  0.560 s    [User: 986.136 s, System: 1959.262 s]
  Range (min … max):   30.989 s … 32.083 s    3 runs
 
Benchmark 6: ./dgemm.R --nr_matrices 144 --size 2000 --power 5 --nr_cores 16
  Time (mean ± σ):     31.639 s ±  0.752 s    [User: 1009.143 s, System: 1938.744 s]
  Range (min … max):   31.114 s … 32.500 s    3 runs
 
Benchmark 7: ./dgemm.R --nr_matrices 144 --size 2000 --power 5 --nr_cores 24
  Time (mean ± σ):     27.206 s ±  0.461 s    [User: 983.112 s, System: 1550.360 s]
  Range (min … max):   26.743 s … 27.665 s    3 runs
 
Benchmark 8: ./dgemm.R --nr_matrices 144 --size 2000 --power 5 --nr_cores 32
  Time (mean ± σ):     25.161 s ±  0.328 s    [User: 967.361 s, System: 1372.073 s]
  Range (min … max):   24.968 s … 25.540 s    3 runs
 
  Warning: Statistical outliers were detected. Consider re-running this benchmark on a quiet system without any interferences from other programs. It might help to use the '--warmup' or '--prepare' options.
 
Benchmark 9: ./dgemm.R --nr_matrices 144 --size 2000 --power 5 --nr_cores 40
  Time (mean ± σ):     22.094 s ±  0.399 s    [User: 920.334 s, System: 1129.151 s]
  Range (min … max):   21.642 s … 22.400 s    3 runs
 
Benchmark 10: ./dgemm.R --nr_matrices 144 --size 2000 --power 5 --nr_cores 48
  Time (mean ± σ):     20.774 s ±  0.799 s    [User: 907.793 s, System: 1027.358 s]
  Range (min … max):   19.923 s … 21.509 s    3 runs
 
Benchmark 11: ./dgemm.R --nr_matrices 144 --size 2000 --power 5 --nr_cores 56
  Time (mean ± σ):     19.405 s ±  0.096 s    [User: 885.717 s, System: 913.199 s]
  Range (min … max):   19.309 s … 19.502 s    3 runs
 
Benchmark 12: ./dgemm.R --nr_matrices 144 --size 2000 --power 5 --nr_cores 64
  Time (mean ± σ):     19.585 s ±  0.165 s    [User: 889.316 s, System: 932.329 s]
  Range (min … max):   19.418 s … 19.747 s    3 runs
 
Benchmark 13: ./dgemm.R --nr_matrices 144 --size 2000 --power 5 --nr_cores 72
  Time (mean ± σ):     18.199 s ±  0.320 s    [User: 869.255 s, System: 822.249 s]
  Range (min … max):   18.011 s … 18.569 s    3 runs
 
  Warning: The first benchmarking run for this command was significantly slower than the rest (18.569 s). This could be caused by (filesystem) caches that were not filled until after the first run. You should consider using the '--warmup' option to fill those caches before the actual benchmark. Alternatively, use the '--prepare' option to clear the caches before each timing run.
 
Benchmark 14: ./dgemm.R --nr_matrices 144 --size 2000 --power 5 --nr_cores 80
  Time (mean ± σ):     17.386 s ±  0.734 s    [User: 858.392 s, System: 754.812 s]
  Range (min … max):   16.935 s … 18.233 s    3 runs
 
  Warning: The first benchmarking run for this command was significantly slower than the rest (18.233 s). This could be caused by (filesystem) caches that were not filled until after the first run. You should consider using the '--warmup' option to fill those caches before the actual benchmark. Alternatively, use the '--prepare' option to clear the caches before each timing run.
 
Benchmark 15: ./dgemm.R --nr_matrices 144 --size 2000 --power 5 --nr_cores 88
  Time (mean ± σ):     16.739 s ±  0.270 s    [User: 848.422 s, System: 706.227 s]
  Range (min … max):   16.519 s … 17.040 s    3 runs
 
Benchmark 16: ./dgemm.R --nr_matrices 144 --size 2000 --power 5 --nr_cores 96
  Time (mean ± σ):     16.030 s ±  0.037 s    [User: 836.820 s, System: 650.692 s]
  Range (min … max):   15.990 s … 16.062 s    3 runs
 
Summary
  ./dgemm.R --nr_matrices 144 --size 2000 --power 5 --nr_cores 96 ran
    1.04 ± 0.02 times faster than ./dgemm.R --nr_matrices 144 --size 2000 --power 5 --nr_cores 88
    1.08 ± 0.05 times faster than ./dgemm.R --nr_matrices 144 --size 2000 --power 5 --nr_cores 80
    1.14 ± 0.02 times faster than ./dgemm.R --nr_matrices 144 --size 2000 --power 5 --nr_cores 72
    1.21 ± 0.01 times faster than ./dgemm.R --nr_matrices 144 --size 2000 --power 5 --nr_cores 56
    1.22 ± 0.01 times faster than ./dgemm.R --nr_matrices 144 --size 2000 --power 5 --nr_cores 64
    1.30 ± 0.05 times faster than ./dgemm.R --nr_matrices 144 --size 2000 --power 5 --nr_cores 48
    1.38 ± 0.03 times faster than ./dgemm.R --nr_matrices 144 --size 2000 --power 5 --nr_cores 40
    1.57 ± 0.02 times faster than ./dgemm.R --nr_matrices 144 --size 2000 --power 5 --nr_cores 32
    1.67 ± 0.04 times faster than ./dgemm.R --nr_matrices 144 --size 2000 --power 5 --nr_cores 2
    1.70 ± 0.03 times faster than ./dgemm.R --nr_matrices 144 --size 2000 --power 5 --nr_cores 24
    1.97 ± 0.04 times faster than ./dgemm.R --nr_matrices 144 --size 2000 --power 5 --nr_cores 12
    1.97 ± 0.05 times faster than ./dgemm.R --nr_matrices 144 --size 2000 --power 5 --nr_cores 16
    2.00 ± 0.02 times faster than ./dgemm.R --nr_matrices 144 --size 2000 --power 5 --nr_cores 4
    2.09 ± 0.08 times faster than ./dgemm.R --nr_matrices 144 --size 2000 --power 5 --nr_cores 1
    2.12 ± 0.07 times faster than ./dgemm.R --nr_matrices 144 --size 2000 --power 5 --nr_cores 8
